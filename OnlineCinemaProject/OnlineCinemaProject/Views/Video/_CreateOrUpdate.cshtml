@model OnlineCinemaProject.Models.video
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.id)
@Html.HiddenFor(model => model.img_url)
@Html.ValidationSummary()
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.name, "Название", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @Html.Kendo().TextBoxFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.details, "Описание", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @Html.TextAreaFor(model => model.details, new {@class = "form-control", rows = 15})
            @Html.ValidationMessageFor(model => model.details)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.age_limit, "Возрастное ограничение", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @Html.Kendo().NumericTextBoxFor(model => model.age_limit).Decimals(0).Format("0")
            @Html.ValidationMessageFor(model => model.age_limit)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.director, "Режиссёр", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @Html.Kendo().TextBoxFor(model => model.director)
            @Html.ValidationMessageFor(model => model.director)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.release_date, "Дата выхода", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @Html.Kendo().DatePickerFor(model => model.release_date)
            @Html.ValidationMessageFor(model => model.release_date)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.img_url, "Изображение", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            <input id="ImagePath" title="Upload a video image" type="file" name="file"/>
            @Html.ValidationMessageFor(model => model.img_url)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.type, "Тип", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @Html.Kendo().DropDownListFor(model => model.type).Items(i =>
            {
                i.Add().Value("0").Text("Фильм");
                i.Add().Value("1").Text("Сериал");
            })
            @Html.ValidationMessageFor(model => model.type)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.videogenres, "Жанры", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @{
                Html.Kendo().MultiSelect()
                    .Name("genres")
                    .DataTextField("name")
                    .DataValueField("id")
                    .Filter("contains")
                    .AutoBind(false)
                    .Value(Model.videogenres.Select(t => new {t.genre.id, t.genre.name}).ToList())
                    .DataSource(source => source.Custom().Type("aspnetmvc-ajax").Transport(transport => { transport.Read("Genres_read", "Genre"); }).Schema(schema => { schema.Data("Data").Total("Total"); })).Render();
            }
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.manufacturers, "Страны", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @{
                Html.Kendo().MultiSelect()
                    .Name("countries")
                    .DataTextField("name")
                    .DataValueField("id")
                    .Filter("contains")
                    .AutoBind(false)
                    .Value(Model.manufacturers.Select(t => new {t.country.id, t.country.name}).ToList())
                    .DataSource(source => source.Custom().Type("aspnetmvc-ajax").Transport(transport => { transport.Read("Countries_read", "Country"); }).Schema(schema => { schema.Data("Data").Total("Total"); })).Render();
            }
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.videoactors, "Актеры", new {@class = "control-label col-md-2"})
        <div class="col-sm-10">
            @{
                Html.Kendo().MultiSelect()
                    .Name("actors")
                    .DataTextField("name")
                    .DataValueField("id")
                    .Filter("contains")
                    .AutoBind(false)
                    .Value(Model.videoactors.Select(t => new {t.actor.id, t.actor.name}).ToList())
                    .DataSource(source => source.Custom().Type("aspnetmvc-ajax").Transport(transport => { transport.Read("Actors_read", "Actor"); }).Schema(schema => { schema.Data("Data").Total("Total"); })).Render();
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        jQuery.validator.addMethod(
            'date',
            function (value, element, params) {
                if (this.optional(element)) {
                    return true;
                };
                var result = false;
                try {
                            var date = kendo.parseDate(value, "dd.MM.yyyy");
                    result = true;
                            if(!date){
                                result = false;
                            }
                } catch (err) {
                    result = false;
                }
                return result;
            },
            ''
        );
    });
</script>